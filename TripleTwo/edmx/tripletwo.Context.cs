//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TripleTwo.edmx
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TripleTwoEntities : DbContext
    {
        public TripleTwoEntities()
            : base("name=TripleTwoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Business> Businesses { get; set; }
        public virtual DbSet<BusinessType> BusinessTypes { get; set; }
        public virtual DbSet<CartProduct> CartProducts { get; set; }
        public virtual DbSet<CommunicationType> CommunicationTypes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CustomerDevice> CustomerDevices { get; set; }
        public virtual DbSet<CustomerFeedBack> CustomerFeedBacks { get; set; }
        public virtual DbSet<CustomerFriend> CustomerFriends { get; set; }
        public virtual DbSet<CustomerMessageReply> CustomerMessageReplies { get; set; }
        public virtual DbSet<CustomerMessage> CustomerMessages { get; set; }
        public virtual DbSet<CustomerMood> CustomerMoods { get; set; }
        public virtual DbSet<CustomerNominee> CustomerNominees { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<EventMedia> EventMedias { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventsEnquiry> EventsEnquiries { get; set; }
        public virtual DbSet<Mood> Moods { get; set; }
        public virtual DbSet<OrganisationGroup> OrganisationGroups { get; set; }
        public virtual DbSet<OrganisationType> OrganisationTypes { get; set; }
        public virtual DbSet<Partner> Partners { get; set; }
        public virtual DbSet<ProductCart> ProductCarts { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Sponsor> Sponsors { get; set; }
        public virtual DbSet<Support> Supports { get; set; }
        public virtual DbSet<SupportEmergency> SupportEmergencies { get; set; }
        public virtual DbSet<Supporter> Supporters { get; set; }
    
        [DbFunction("TripleTwoEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[TripleTwoEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<AddBusiness_Result> AddBusiness(Nullable<long> businessId, string businessName, Nullable<long> businessTypeId, string businessLogo, string contactFirstName, string contactLastName, string contactPhone, string contactMobile, string contactEmail, string location, Nullable<long> countryId, string otherInfo, string aBN, string webSiteUrl, Nullable<int> isActive)
        {
            var businessIdParameter = businessId.HasValue ?
                new ObjectParameter("BusinessId", businessId) :
                new ObjectParameter("BusinessId", typeof(long));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var businessTypeIdParameter = businessTypeId.HasValue ?
                new ObjectParameter("BusinessTypeId", businessTypeId) :
                new ObjectParameter("BusinessTypeId", typeof(long));
    
            var businessLogoParameter = businessLogo != null ?
                new ObjectParameter("BusinessLogo", businessLogo) :
                new ObjectParameter("BusinessLogo", typeof(string));
    
            var contactFirstNameParameter = contactFirstName != null ?
                new ObjectParameter("ContactFirstName", contactFirstName) :
                new ObjectParameter("ContactFirstName", typeof(string));
    
            var contactLastNameParameter = contactLastName != null ?
                new ObjectParameter("ContactLastName", contactLastName) :
                new ObjectParameter("ContactLastName", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var contactMobileParameter = contactMobile != null ?
                new ObjectParameter("ContactMobile", contactMobile) :
                new ObjectParameter("ContactMobile", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(long));
    
            var otherInfoParameter = otherInfo != null ?
                new ObjectParameter("OtherInfo", otherInfo) :
                new ObjectParameter("OtherInfo", typeof(string));
    
            var aBNParameter = aBN != null ?
                new ObjectParameter("ABN", aBN) :
                new ObjectParameter("ABN", typeof(string));
    
            var webSiteUrlParameter = webSiteUrl != null ?
                new ObjectParameter("WebSiteUrl", webSiteUrl) :
                new ObjectParameter("WebSiteUrl", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddBusiness_Result>("AddBusiness", businessIdParameter, businessNameParameter, businessTypeIdParameter, businessLogoParameter, contactFirstNameParameter, contactLastNameParameter, contactPhoneParameter, contactMobileParameter, contactEmailParameter, locationParameter, countryIdParameter, otherInfoParameter, aBNParameter, webSiteUrlParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<AddCustomerNominees_Result> AddCustomerNominees(string nomineeName, string nomineeMobile, Nullable<int> customerId)
        {
            var nomineeNameParameter = nomineeName != null ?
                new ObjectParameter("NomineeName", nomineeName) :
                new ObjectParameter("NomineeName", typeof(string));
    
            var nomineeMobileParameter = nomineeMobile != null ?
                new ObjectParameter("NomineeMobile", nomineeMobile) :
                new ObjectParameter("NomineeMobile", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddCustomerNominees_Result>("AddCustomerNominees", nomineeNameParameter, nomineeMobileParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<AddEvent_Result> AddEvent(Nullable<long> eventId, Nullable<long> organisationTypeId, Nullable<long> partnerId, string title, string description, string location, Nullable<decimal> latitude, Nullable<decimal> longitude, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string contactPerson, string contactPhone, string contactEmail, Nullable<int> eventTypeId, Nullable<int> status, Nullable<int> countryId, Nullable<int> stateId, string city, string postcode)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(long));
    
            var organisationTypeIdParameter = organisationTypeId.HasValue ?
                new ObjectParameter("OrganisationTypeId", organisationTypeId) :
                new ObjectParameter("OrganisationTypeId", typeof(long));
    
            var partnerIdParameter = partnerId.HasValue ?
                new ObjectParameter("PartnerId", partnerId) :
                new ObjectParameter("PartnerId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(decimal));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var eventTypeIdParameter = eventTypeId.HasValue ?
                new ObjectParameter("EventTypeId", eventTypeId) :
                new ObjectParameter("EventTypeId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddEvent_Result>("AddEvent", eventIdParameter, organisationTypeIdParameter, partnerIdParameter, titleParameter, descriptionParameter, locationParameter, latitudeParameter, longitudeParameter, startDateParameter, endDateParameter, contactPersonParameter, contactPhoneParameter, contactEmailParameter, eventTypeIdParameter, statusParameter, countryIdParameter, stateIdParameter, cityParameter, postcodeParameter);
        }
    
        public virtual int AddEventMedia(Nullable<int> eventId, Nullable<int> mediaType, string media)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var mediaTypeParameter = mediaType.HasValue ?
                new ObjectParameter("MediaType", mediaType) :
                new ObjectParameter("MediaType", typeof(int));
    
            var mediaParameter = media != null ?
                new ObjectParameter("Media", media) :
                new ObjectParameter("Media", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEventMedia", eventIdParameter, mediaTypeParameter, mediaParameter);
        }
    
        public virtual ObjectResult<AddRemoveCartProducts_Result> AddRemoveCartProducts(Nullable<long> cartProductID, Nullable<long> cartID, Nullable<long> productID, Nullable<long> customerID, Nullable<int> qty, Nullable<int> action)
        {
            var cartProductIDParameter = cartProductID.HasValue ?
                new ObjectParameter("CartProductID", cartProductID) :
                new ObjectParameter("CartProductID", typeof(long));
    
            var cartIDParameter = cartID.HasValue ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(long));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddRemoveCartProducts_Result>("AddRemoveCartProducts", cartProductIDParameter, cartIDParameter, productIDParameter, customerIDParameter, qtyParameter, actionParameter);
        }
    
        public virtual ObjectResult<AddRemoveCustomerFriend_Result> AddRemoveCustomerFriend(Nullable<long> customerId, Nullable<long> friendCustomerId, Nullable<int> action)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var friendCustomerIdParameter = friendCustomerId.HasValue ?
                new ObjectParameter("FriendCustomerId", friendCustomerId) :
                new ObjectParameter("FriendCustomerId", typeof(long));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddRemoveCustomerFriend_Result>("AddRemoveCustomerFriend", customerIdParameter, friendCustomerIdParameter, actionParameter);
        }
    
        public virtual ObjectResult<AddUpdateCustomer_Result> AddUpdateCustomer(Nullable<int> customerId, string firstName, string lastName, string email, string mobile, string pin, string postCode, Nullable<int> status)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            var postCodeParameter = postCode != null ?
                new ObjectParameter("PostCode", postCode) :
                new ObjectParameter("PostCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddUpdateCustomer_Result>("AddUpdateCustomer", customerIdParameter, firstNameParameter, lastNameParameter, emailParameter, mobileParameter, pinParameter, postCodeParameter, statusParameter);
        }
    
        public virtual int AddUpdateCustomerProSettings(Nullable<long> customerId, Nullable<bool> showMood, Nullable<bool> showProfileToAll, Nullable<bool> showProfileToFriends, Nullable<bool> doNotShowProfile)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var showMoodParameter = showMood.HasValue ?
                new ObjectParameter("ShowMood", showMood) :
                new ObjectParameter("ShowMood", typeof(bool));
    
            var showProfileToAllParameter = showProfileToAll.HasValue ?
                new ObjectParameter("ShowProfileToAll", showProfileToAll) :
                new ObjectParameter("ShowProfileToAll", typeof(bool));
    
            var showProfileToFriendsParameter = showProfileToFriends.HasValue ?
                new ObjectParameter("ShowProfileToFriends", showProfileToFriends) :
                new ObjectParameter("ShowProfileToFriends", typeof(bool));
    
            var doNotShowProfileParameter = doNotShowProfile.HasValue ?
                new ObjectParameter("DoNotShowProfile", doNotShowProfile) :
                new ObjectParameter("DoNotShowProfile", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUpdateCustomerProSettings", customerIdParameter, showMoodParameter, showProfileToAllParameter, showProfileToFriendsParameter, doNotShowProfileParameter);
        }
    
        public virtual int AdminGetCustomerMoods(Nullable<int> pageSize, Nullable<int> pageIndex, string searchstr, Nullable<int> sortBy, string fromDate, string toDate, Nullable<long> customerId)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var searchstrParameter = searchstr != null ?
                new ObjectParameter("Searchstr", searchstr) :
                new ObjectParameter("Searchstr", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdminGetCustomerMoods", pageSizeParameter, pageIndexParameter, searchstrParameter, sortByParameter, fromDateParameter, toDateParameter, customerIdParameter);
        }
    
        public virtual int AdminGetCustomerNominees(Nullable<int> pageSize, Nullable<int> pageIndex, string searchstr, Nullable<int> sortBy, string fromDate, string toDate, Nullable<long> customerId)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var searchstrParameter = searchstr != null ?
                new ObjectParameter("Searchstr", searchstr) :
                new ObjectParameter("Searchstr", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdminGetCustomerNominees", pageSizeParameter, pageIndexParameter, searchstrParameter, sortByParameter, fromDateParameter, toDateParameter, customerIdParameter);
        }
    
        public virtual int AdminGetEventEnquiries(Nullable<int> pageSize, Nullable<int> pageIndex, string searchstr, Nullable<int> sortBy, string fromDate, string toDate, Nullable<long> enquiryId)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var searchstrParameter = searchstr != null ?
                new ObjectParameter("Searchstr", searchstr) :
                new ObjectParameter("Searchstr", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var enquiryIdParameter = enquiryId.HasValue ?
                new ObjectParameter("EnquiryId", enquiryId) :
                new ObjectParameter("EnquiryId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdminGetEventEnquiries", pageSizeParameter, pageIndexParameter, searchstrParameter, sortByParameter, fromDateParameter, toDateParameter, enquiryIdParameter);
        }
    
        public virtual ObjectResult<CheckPartnerLogin_Result> CheckPartnerLogin(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckPartnerLogin_Result>("CheckPartnerLogin", userNameParameter, passwordParameter);
        }
    
        public virtual int CreateOrderByCart(Nullable<long> cartId)
        {
            var cartIdParameter = cartId.HasValue ?
                new ObjectParameter("CartId", cartId) :
                new ObjectParameter("CartId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOrderByCart", cartIdParameter);
        }
    
        public virtual ObjectResult<CustomerLogin_Result> CustomerLogin(string userName, string pin, string deviceId, Nullable<int> app)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            var deviceIdParameter = deviceId != null ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(string));
    
            var appParameter = app.HasValue ?
                new ObjectParameter("App", app) :
                new ObjectParameter("App", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerLogin_Result>("CustomerLogin", userNameParameter, pinParameter, deviceIdParameter, appParameter);
        }
    
        public virtual ObjectResult<GetAllCustomers_Result> GetAllCustomers(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCustomers_Result>("GetAllCustomers", customerIdParameter);
        }
    
        public virtual ObjectResult<GetAllCustomersForFriends_Result> GetAllCustomersForFriends(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCustomersForFriends_Result>("GetAllCustomersForFriends", customerIdParameter);
        }
    
        public virtual int GetAppEventsList(Nullable<int> pageSize, Nullable<int> pageIndex, string str, Nullable<int> sortBy)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAppEventsList", pageSizeParameter, pageIndexParameter, strParameter, sortByParameter);
        }
    
        public virtual ObjectResult<GetBusinessDetailsById_Result> GetBusinessDetailsById(Nullable<long> businessId)
        {
            var businessIdParameter = businessId.HasValue ?
                new ObjectParameter("BusinessId", businessId) :
                new ObjectParameter("BusinessId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBusinessDetailsById_Result>("GetBusinessDetailsById", businessIdParameter);
        }
    
        public virtual int GetBusinessList(Nullable<int> pageSize, Nullable<int> pageIndex, string str, Nullable<int> sortBy, Nullable<long> businessId)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var businessIdParameter = businessId.HasValue ?
                new ObjectParameter("BusinessId", businessId) :
                new ObjectParameter("BusinessId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBusinessList", pageSizeParameter, pageIndexParameter, strParameter, sortByParameter, businessIdParameter);
        }
    
        public virtual ObjectResult<GetCountries_Result> GetCountries(Nullable<int> countryId)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountries_Result>("GetCountries", countryIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerDetails_Result> GetCustomerDetails(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerDetails_Result>("GetCustomerDetails", customerIdParameter);
        }
    
        public virtual int GetCustomerFriends(Nullable<long> customerId, Nullable<int> status, string searchName)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCustomerFriends", customerIdParameter, statusParameter, searchNameParameter);
        }
    
        public virtual ObjectResult<GetCustomerMood_Result> GetCustomerMood(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerMood_Result>("GetCustomerMood", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerNominees_Result> GetCustomerNominees(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerNominees_Result>("GetCustomerNominees", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerProductCart_Result> GetCustomerProductCart(Nullable<long> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerProductCart_Result>("GetCustomerProductCart", customerIDParameter);
        }
    
        public virtual int GetCustomerProfileSettings(Nullable<long> customerId, Nullable<bool> showMood, Nullable<bool> showProfileToAll, Nullable<bool> showProfileToFriends, Nullable<bool> doNotShowProfile)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var showMoodParameter = showMood.HasValue ?
                new ObjectParameter("ShowMood", showMood) :
                new ObjectParameter("ShowMood", typeof(bool));
    
            var showProfileToAllParameter = showProfileToAll.HasValue ?
                new ObjectParameter("ShowProfileToAll", showProfileToAll) :
                new ObjectParameter("ShowProfileToAll", typeof(bool));
    
            var showProfileToFriendsParameter = showProfileToFriends.HasValue ?
                new ObjectParameter("ShowProfileToFriends", showProfileToFriends) :
                new ObjectParameter("ShowProfileToFriends", typeof(bool));
    
            var doNotShowProfileParameter = doNotShowProfile.HasValue ?
                new ObjectParameter("DoNotShowProfile", doNotShowProfile) :
                new ObjectParameter("DoNotShowProfile", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCustomerProfileSettings", customerIdParameter, showMoodParameter, showProfileToAllParameter, showProfileToFriendsParameter, doNotShowProfileParameter);
        }
    
        public virtual int GetCustomersList(Nullable<int> pageSize, Nullable<int> pageIndex, string searchMemberstr, string searchEmailstr, string searchMobilestr, Nullable<int> sortBy, string fromDate, string toDate)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var searchMemberstrParameter = searchMemberstr != null ?
                new ObjectParameter("SearchMemberstr", searchMemberstr) :
                new ObjectParameter("SearchMemberstr", typeof(string));
    
            var searchEmailstrParameter = searchEmailstr != null ?
                new ObjectParameter("SearchEmailstr", searchEmailstr) :
                new ObjectParameter("SearchEmailstr", typeof(string));
    
            var searchMobilestrParameter = searchMobilestr != null ?
                new ObjectParameter("SearchMobilestr", searchMobilestr) :
                new ObjectParameter("SearchMobilestr", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCustomersList", pageSizeParameter, pageIndexParameter, searchMemberstrParameter, searchEmailstrParameter, searchMobilestrParameter, sortByParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetEventDetails_Result> GetEventDetails(Nullable<long> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventDetails_Result>("GetEventDetails", eventIdParameter);
        }
    
        public virtual ObjectResult<GetEventMediaById_Result> GetEventMediaById(Nullable<long> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventMediaById_Result>("GetEventMediaById", eventIdParameter);
        }
    
        public virtual int GetEvents(Nullable<long> eventID, string searchstr, Nullable<int> pageSize, Nullable<int> pageIndex)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(long));
    
            var searchstrParameter = searchstr != null ?
                new ObjectParameter("Searchstr", searchstr) :
                new ObjectParameter("Searchstr", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEvents", eventIDParameter, searchstrParameter, pageSizeParameter, pageIndexParameter);
        }
    
        public virtual int GetEventsList(Nullable<int> pageSize, Nullable<int> pageIndex, string searchMemberstr, string searchEmailstr, string searchMobilestr, Nullable<int> sortBy, string fromDate, string toDate)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var searchMemberstrParameter = searchMemberstr != null ?
                new ObjectParameter("SearchMemberstr", searchMemberstr) :
                new ObjectParameter("SearchMemberstr", typeof(string));
    
            var searchEmailstrParameter = searchEmailstr != null ?
                new ObjectParameter("SearchEmailstr", searchEmailstr) :
                new ObjectParameter("SearchEmailstr", typeof(string));
    
            var searchMobilestrParameter = searchMobilestr != null ?
                new ObjectParameter("SearchMobilestr", searchMobilestr) :
                new ObjectParameter("SearchMobilestr", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEventsList", pageSizeParameter, pageIndexParameter, searchMemberstrParameter, searchEmailstrParameter, searchMobilestrParameter, sortByParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetOrganisationGroups_Result> GetOrganisationGroups(Nullable<int> organisationTypeId)
        {
            var organisationTypeIdParameter = organisationTypeId.HasValue ?
                new ObjectParameter("OrganisationTypeId", organisationTypeId) :
                new ObjectParameter("OrganisationTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganisationGroups_Result>("GetOrganisationGroups", organisationTypeIdParameter);
        }
    
        public virtual ObjectResult<GetOrganisationTypes_Result> GetOrganisationTypes(Nullable<int> organisationTypeId)
        {
            var organisationTypeIdParameter = organisationTypeId.HasValue ?
                new ObjectParameter("OrganisationTypeId", organisationTypeId) :
                new ObjectParameter("OrganisationTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganisationTypes_Result>("GetOrganisationTypes", organisationTypeIdParameter);
        }
    
        public virtual int GetPaggingData(Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter query)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPaggingData", pageSizeParameter, pageIndexParameter, query);
        }
    
        public virtual ObjectResult<GetProductDetailById_Result> GetProductDetailById(Nullable<long> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductDetailById_Result>("GetProductDetailById", productIdParameter);
        }
    
        public virtual ObjectResult<GetProductImagesById_Result> GetProductImagesById(Nullable<long> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductImagesById_Result>("GetProductImagesById", productIdParameter);
        }
    
        public virtual int GetProducts(string searchStr, Nullable<long> pageIndex, Nullable<long> pageSize, Nullable<long> productId)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(long));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProducts", searchStrParameter, pageIndexParameter, pageSizeParameter, productIdParameter);
        }
    
        public virtual ObjectResult<GetSponsorDetailsById_Result> GetSponsorDetailsById(Nullable<long> sponsorId)
        {
            var sponsorIdParameter = sponsorId.HasValue ?
                new ObjectParameter("SponsorId", sponsorId) :
                new ObjectParameter("SponsorId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSponsorDetailsById_Result>("GetSponsorDetailsById", sponsorIdParameter);
        }
    
        public virtual int GetSponsorList(Nullable<int> pageSize, Nullable<int> pageIndex, string str, Nullable<int> sortBy, Nullable<long> sponsorId)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var sponsorIdParameter = sponsorId.HasValue ?
                new ObjectParameter("SponsorId", sponsorId) :
                new ObjectParameter("SponsorId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSponsorList", pageSizeParameter, pageIndexParameter, strParameter, sortByParameter, sponsorIdParameter);
        }
    
        public virtual ObjectResult<GetSupportEmergency_Result> GetSupportEmergency(Nullable<int> emergencyId)
        {
            var emergencyIdParameter = emergencyId.HasValue ?
                new ObjectParameter("EmergencyId", emergencyId) :
                new ObjectParameter("EmergencyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSupportEmergency_Result>("GetSupportEmergency", emergencyIdParameter);
        }
    
        public virtual ObjectResult<GetSupporterDetailsById_Result> GetSupporterDetailsById(Nullable<long> supporterId)
        {
            var supporterIdParameter = supporterId.HasValue ?
                new ObjectParameter("SupporterId", supporterId) :
                new ObjectParameter("SupporterId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSupporterDetailsById_Result>("GetSupporterDetailsById", supporterIdParameter);
        }
    
        public virtual int GetSupporterList(Nullable<int> pageSize, Nullable<int> pageIndex, string str, Nullable<int> sortBy, Nullable<long> supporterId)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var supporterIdParameter = supporterId.HasValue ?
                new ObjectParameter("SupporterId", supporterId) :
                new ObjectParameter("SupporterId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSupporterList", pageSizeParameter, pageIndexParameter, strParameter, sortByParameter, supporterIdParameter);
        }
    
        public virtual ObjectResult<InsertCustomerFeedBack_Result> InsertCustomerFeedBack(Nullable<long> customerId, string subject, string message)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertCustomerFeedBack_Result>("InsertCustomerFeedBack", customerIdParameter, subjectParameter, messageParameter);
        }
    
        public virtual ObjectResult<InsertCustomerSupport_Result> InsertCustomerSupport(Nullable<long> customerId, string subject, string message)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertCustomerSupport_Result>("InsertCustomerSupport", customerIdParameter, subjectParameter, messageParameter);
        }
    
        public virtual ObjectResult<InsertEventEnquiry_Result> InsertEventEnquiry(Nullable<long> eventId, Nullable<long> customerId, string message)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(long));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertEventEnquiry_Result>("InsertEventEnquiry", eventIdParameter, customerIdParameter, messageParameter);
        }
    
        public virtual ObjectResult<RegisterCustomer_Result> RegisterCustomer(Nullable<int> countryId, Nullable<int> organisationTypeId, Nullable<int> organisationGroupId, string firstName, string lastName, string email, string mobile, string pin)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var organisationTypeIdParameter = organisationTypeId.HasValue ?
                new ObjectParameter("OrganisationTypeId", organisationTypeId) :
                new ObjectParameter("OrganisationTypeId", typeof(int));
    
            var organisationGroupIdParameter = organisationGroupId.HasValue ?
                new ObjectParameter("OrganisationGroupId", organisationGroupId) :
                new ObjectParameter("OrganisationGroupId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegisterCustomer_Result>("RegisterCustomer", countryIdParameter, organisationTypeIdParameter, organisationGroupIdParameter, firstNameParameter, lastNameParameter, emailParameter, mobileParameter, pinParameter);
        }
    
        public virtual ObjectResult<RemoveProductCart_Result> RemoveProductCart(Nullable<long> cartID, Nullable<long> outletID)
        {
            var cartIDParameter = cartID.HasValue ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(long));
    
            var outletIDParameter = outletID.HasValue ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RemoveProductCart_Result>("RemoveProductCart", cartIDParameter, outletIDParameter);
        }
    
        public virtual ObjectResult<SetCustomerMood_Result> SetCustomerMood(Nullable<long> customerId, Nullable<int> moodId, Nullable<decimal> latitude, Nullable<decimal> longitude, string location)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var moodIdParameter = moodId.HasValue ?
                new ObjectParameter("MoodId", moodId) :
                new ObjectParameter("MoodId", typeof(int));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(decimal));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SetCustomerMood_Result>("SetCustomerMood", customerIdParameter, moodIdParameter, latitudeParameter, longitudeParameter, locationParameter);
        }
    
        public virtual ObjectResult<UpdateCustomer_Result> UpdateCustomer(Nullable<long> customerId, Nullable<long> countryId, Nullable<long> organisationTypeId, string firstName, string lastName, string gender, string dOB, Nullable<int> birthMonth, Nullable<int> birthYear, string mobile, string pin, string email, string profilePic, string address, string city, string postCode)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(long));
    
            var organisationTypeIdParameter = organisationTypeId.HasValue ?
                new ObjectParameter("OrganisationTypeId", organisationTypeId) :
                new ObjectParameter("OrganisationTypeId", typeof(long));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var birthMonthParameter = birthMonth.HasValue ?
                new ObjectParameter("BirthMonth", birthMonth) :
                new ObjectParameter("BirthMonth", typeof(int));
    
            var birthYearParameter = birthYear.HasValue ?
                new ObjectParameter("BirthYear", birthYear) :
                new ObjectParameter("BirthYear", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var profilePicParameter = profilePic != null ?
                new ObjectParameter("ProfilePic", profilePic) :
                new ObjectParameter("ProfilePic", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postCodeParameter = postCode != null ?
                new ObjectParameter("PostCode", postCode) :
                new ObjectParameter("PostCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateCustomer_Result>("UpdateCustomer", customerIdParameter, countryIdParameter, organisationTypeIdParameter, firstNameParameter, lastNameParameter, genderParameter, dOBParameter, birthMonthParameter, birthYearParameter, mobileParameter, pinParameter, emailParameter, profilePicParameter, addressParameter, cityParameter, postCodeParameter);
        }
    
        public virtual ObjectResult<UpdateCustomerProfileSettings_Result> UpdateCustomerProfileSettings(Nullable<long> customerId, Nullable<bool> showMood, Nullable<bool> showProfileToAll, Nullable<bool> showProfileToFriends, Nullable<bool> doNotShowProfile)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var showMoodParameter = showMood.HasValue ?
                new ObjectParameter("ShowMood", showMood) :
                new ObjectParameter("ShowMood", typeof(bool));
    
            var showProfileToAllParameter = showProfileToAll.HasValue ?
                new ObjectParameter("ShowProfileToAll", showProfileToAll) :
                new ObjectParameter("ShowProfileToAll", typeof(bool));
    
            var showProfileToFriendsParameter = showProfileToFriends.HasValue ?
                new ObjectParameter("ShowProfileToFriends", showProfileToFriends) :
                new ObjectParameter("ShowProfileToFriends", typeof(bool));
    
            var doNotShowProfileParameter = doNotShowProfile.HasValue ?
                new ObjectParameter("DoNotShowProfile", doNotShowProfile) :
                new ObjectParameter("DoNotShowProfile", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateCustomerProfileSettings_Result>("UpdateCustomerProfileSettings", customerIdParameter, showMoodParameter, showProfileToAllParameter, showProfileToFriendsParameter, doNotShowProfileParameter);
        }
    
        public virtual int USP_GetPaggingData(Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter query)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetPaggingData", pageSizeParameter, pageIndexParameter, query);
        }
    
        public virtual ObjectResult<VerifyCustomerMobile_Result> VerifyCustomerMobile(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerifyCustomerMobile_Result>("VerifyCustomerMobile", mobileParameter);
        }
    }
}
